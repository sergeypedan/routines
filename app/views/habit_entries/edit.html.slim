.container-fluid.section-padding
	= form_with model: @entry, local: true do |f|

		.row

			.col-auto.form-group
				= f.label             :habit_id, nil, class: :required
				= f.collection_select :habit_id, Habit.order(:position), :id, :name, { prompt: true }, required: true, class: "form-control"

			.col-auto.form-group
				- attr_name = :time
				= f.label attr_name, nil, class: :required
				- if f.object.habit
					.input-group
						= f.number_field attr_name, \
														inputmode: input_mode(f.object, attr_name), \
														max: validated_numeric_max(f.object, attr_name), \
														min: validated_numeric_min(f.object, attr_name), \
														required: validated_presence(f.object, attr_name), \
														step: input_step(record, attr), \
														class: "form-control"
						.input-group-append
							.input-group-text = f.object.habit.time_unit
				- else
					= f.number_field attr_name, \
													inputmode: input_mode(f.object, attr_name), \
													max: validated_numeric_max(f.object, attr_name), \
													min: validated_numeric_min(f.object, attr_name), \
													required: validated_presence(f.object, attr_name), \
													step: input_step(record, attr), \
													class: "form-control"

			/ .col-auto.form-group
			/ 	= f.label                    :time_unit, nil, class: :required
			/ 	= f.collection_radio_buttons :time_unit, \
			/ 															Habit.time_units_for_radios, :first, :last, \
			/ 															{}, { required: true } do |b|
			/ 		.form-check
			/ 			= b.radio_button class: "form-check-input"
			/ 			= b.label class: "form-check-label"

			.col-auto.form-group
				= f.label      :date, nil, class: :required
				= f.date_field :date, value: f.object.created_at.to_date, required: true, class: "form-control"

		= render "application/form_errors", record: f.object
		.form-actions = save_btn(f)

.container-fluid.section-padding
	= form_with model: @habit, local: true do |f|

		= f.hidden_field :user_id

		.mb-3
			= f.label      :name, nil, class: (:required if attrs[:required])
			= f.text_field :name, required: true, autofocus: f.object.new_record?, class: "form-control"

		.mb-3
			- attr_name = :position
			- attrs = resolved_input_attributes(f.object, attr_name)
			= f.label        attr_name, nil, class: (:required if attrs[:required])
			= f.number_field attr_name, class: "form-control", \
													inputmode: attrs[:inputmode], \
													min:       attrs[:min], \
													max:       attrs[:max], \
													required:  attrs[:required], \
													step:      attrs[:step]

		.mb-3
			- attr_name = :rounds_per_day
			- attrs = resolved_input_attributes(f.object, attr_name)
			= f.label        attr_name, nil, class: (:required if attrs[:required])
			= f.number_field attr_name, class: "form-control", \
													inputmode: attrs[:inputmode], \
													min:       attrs[:min], \
													max:       attrs[:max], \
													required:  attrs[:required], \
													step:      attrs[:step]

		.mb-3
			= f.label             :excercise_id
			= f.collection_select :excercise_id, Excercise.all, :id, :name, { include_blank: true }, class: "form-control"

		.row
			.col-auto.mb-3
				- attr_name = :time_per_round
				- attrs = resolved_input_attributes(f.object, attr_name)
				= f.label        attr_name, nil, class: (:required if attrs[:required])
				= f.number_field attr_name, class: "form-control", \
													inputmode: attrs[:inputmode], \
													min:       attrs[:min], \
													max:       attrs[:max], \
													required:  attrs[:required], \
													step:      attrs[:step]
				small.form-text.text-muted Leave 0 if habit is not time-based

			.col-auto.mb-3
				= f.label  :time_unit, nil, class: (:required if attrs[:required])
				= f.collection_radio_buttons :time_unit, Habit.time_units_for_radios, :first, :last, {}, { required: true } do |b|
					.form-check
						= b.radio_button class: "form-check-input"
						= b.label class: "form-check-label"

		= render "application/form_errors", record: f.object
		.form-actions = save_btn(f)

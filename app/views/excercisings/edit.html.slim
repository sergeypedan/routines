.container.section-padding

	= form_with model: @excercising, local: true do |f|

		.form-group
			= f.label      :date, nil, class: "control-label"
			= f.date_field :date, required: true, class: "form-control"

		.form-group
			ruby:
				options = { prompt: true }
				options.merge!({ selected: Excercising.order(:created_at).last.id }) if f.object.new_record?

			= f.label             :excercise_id
			= f.collection_select :excercise_id, Excercise.all, :id, :name, options, required: true, class: "form-control"

			/ = f.grouped_collection_select :excercise_id, Excercise.all, :id, \
			/ 												:excercise_id, :id, :name, \
			/ 												options, { required: true, class: "form-control" }

		- if f.object.persisted?
			.form-group
				- if @excercising.excercise.repetition_based?
					= f.label :repetitions_count, nil, class: "control-label"
					.input-group
						= f.number_field :repetitions_count, required: true, class: "form-control"
						.input-group-append
							.input-group-text reps
				- else
					= f.label :resistance_duration, nil, class: "control-label"
					.input-group
						= f.number_field :resistance_duration, required: true, class: "form-control"
						.input-group-append
							.input-group-text min
		- else
			.form-group
				= f.label :repetitions_count, nil, class: "control-label"
				.input-group
					= f.number_field :repetitions_count, class: "form-control"
					.input-group-append
						.input-group-text reps

			.form-group
				= f.label :resistance_duration, nil, class: "control-label"
				.input-group
					= f.number_field :resistance_duration, class: "form-control"
					.input-group-append
						.input-group-text min

		.form-group
			= f.label :weight, nil, class: "control-label"
			.input-group
				= f.number_field :weight, required: true, min: 0, step: 0.5, class: "form-control"
				.input-group-append
					.input-group-text kg

		= render "application/form_errors", record: f.object
		.form-actions = save_btn(f)

- @workouts.group_by(&:date).each do |date, day_workouts|

	article.workout-mobile
		h4.workout-mobile__title = l date, format: "%-d %B %Y"

		- day_workouts. \
			sort_by(&:created_at). \
			group_by(&:excercise). \
			each_with_index do |(excercise, excercise_workouts), index|

			.cell-1.workout-mobile__excercise data-action="show-cell-menu"
				.cell-1__content
					span.workout-mobile__counter
						= index + 1
						| .

					h5.workout-mobile__excercise__title = excercise.name_with_flavor(I18n.locale)

					ul.workout-mobile__muscles__ul.mb-1
						li = excercise.main_muscle.l_name(I18n.locale)
						- excercise.muscles.each do |muscle|
							li = muscle.l_name(I18n.locale)

					.row-xs
						.col-xs-6
							- excercise_workouts.each do |workout|
								.workout-mobile__WRT
									- if workout.weight.positive?
										span.workout-mobile__weight = number_to_human(workout.weight, units: { unit: t("weight.kg") })

									- if workout.excercise.repetition_based?
										span.reps
											| × 
											= t :reps, count: workout.repetitions_count
									- elsif workout.resistance_duration&.positive?
										span.duration = "#{workout.resistance_duration} min"

						.col-xs-6

							.workout-mobile__WRT.workout-mobile__WRT--averages
								| Avg: 

								- if excercise.default_weight.positive? && excercise.avg_weight.positive?
									span.workout-mobile__weight
										=> number_with_precision(excercise.avg_weight, precision: 1, strip_insignificant_zeros: true)
										| Kg

								- if excercise.repetition_based?
									- if excercise.avg_repetitions.positive?
										span.reps
											| × 
											= t :reps, count: number_with_precision(excercise.avg_repetitions, precision: 1, strip_insignificant_zeros: true)

								- elsif excercise.default_time&.positive?
									span.duration
										= number_with_precision(excercise.avg_time, precision: 1, strip_insignificant_zeros: true)
										= " min"

							.workout-mobile__WRT.workout-mobile__WRT--averages
								= link_to "Def", [:edit, :admin, excercise], target: :_blank, class: "a-hidden-affordance"
								| : 

								- if excercise.default_weight.positive?
									span.workout-mobile__weight = number_to_human(excercise.default_weight, units: { unit: t("weight.kg") })

								- if excercise.repetition_based?
									- if excercise.default_repetitions_count.positive?
										span.reps
											| × 
											= t :reps, count: excercise.default_repetitions_count

								- elsif excercise.default_time&.positive?
									span.duration
										= number_with_precision(excercise.default_time, precision: 1, strip_insignificant_zeros: true)
										= " min"

				- workout = excercise_workouts.last
				.cell-1__backdrop data-role="backdrop" hidden=""
				.cell-1__menu role="menu" hidden=""
					= edit_btn(workout, text: fa_icon("pencil"), class: ["btn", "btn-primary"])

					= button_to [:duplicate, workout], { class: "btn btn-primary", form: { class: "form-as-btn" }, remote: false }
						= fa_icon "copy"

					- if workout.date.today?
						= button_to [:yesterday, workout], { class: "btn btn-outline-secondary", form: { class: "form-as-btn" }, remote: false }
							= fa_icon "arrow-down"

					= delete_btn(workout, text: fa_icon("trash"), class: ["btn", "btn-outline-danger"])
